apiVersion: v1
kind: Service
metadata:
  name: redis-headless
  namespace: default
  labels:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.8.2
status:
  loadBalancer: {}
spec:
  ports:
    - name: tcp-redis
      protocol: TCP
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
  clusterIP: None
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
---
apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: default
  labels:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.8.2
status:
  loadBalancer: {}
spec:
  ports:
    - name: tcp-redis
      protocol: TCP
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/component: master
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
---
apiVersion: v1
kind: Service
metadata:
  name: redis-replicas
  namespace: default
  labels:
    app.kubernetes.io/component: replica
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-16.8.2
status:
  loadBalancer: {}
spec:
  ports:
    - name: tcp-redis
      protocol: TCP
      port: 6379
      targetPort: redis
  selector:
    app.kubernetes.io/component: replica
    app.kubernetes.io/instance: redis
    app.kubernetes.io/name: redis
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster
